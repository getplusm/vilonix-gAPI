package plusm.vilonix.gapi.exploit.imp;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventPriority;
import org.bukkit.event.player.AsyncPlayerPreLoginEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerLoginEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import plusm.vilonix.api.Events;
import plusm.vilonix.gapi.exploit.AntiVPN;
import plusm.vilonix.gapi.exploit.NullAddress;
import plusm.vilonix.gapi.exploit.UUIDSpoof;
import plusm.vilonix.gapi.exploit.WorldDownloader;
import plusm.vilonix.gapi.exploit.channel.PacketChannel;
import plusm.vilonix.gapi.loader.DartaAPI;

public class ExploitManager {

    private final PacketChannel packetChannel;

    public ExploitManager(DartaAPI plugin) {

        new AntiVPN(plugin);

        registerListener();

        Bukkit.getServer().getMessenger().registerIncomingPluginChannel(plugin, "WDL|INIT", new WorldDownloader());
        Bukkit.getServer().getMessenger().registerIncomingPluginChannel(plugin, "WDL|REQUEST", new WorldDownloader());
        Bukkit.getServer().getMessenger().registerOutgoingPluginChannel(plugin, "WDL|CONTROL");

        packetChannel = new PacketChannel();
    }

    private final Exploit uuidSpoof = new UUIDSpoof();
    private final Exploit nullAddress = new NullAddress();

    private void registerListener() {

        Events.subscribe(PlayerLoginEvent.class, EventPriority.LOWEST)
                .handler(event -> {


                    nullAddress.check(event);

                    if (event.getResult() == PlayerLoginEvent.Result.ALLOWED) {
                        uuidSpoof.check(event);
                    }

                });
        Events.subscribe(AsyncPlayerPreLoginEvent.class, EventPriority.HIGHEST)
                .handler(event -> {
                    final Player player = Bukkit.getServer().getPlayerExact(event.getName().toLowerCase());

                    if (player == null) {
                        return;
                    }

                    if (player.isOnline()) {
                        event.disallow(AsyncPlayerPreLoginEvent.Result.KICK_OTHER, "Игрок уже с таким ником играет на сервере, смените ник");
                    }
                });
        Events.subscribe(PlayerJoinEvent.class)
                .handler(event -> packetChannel.addChannel(event.getPlayer()));

        Events.subscribe(PlayerQuitEvent.class)
                .handler(event -> packetChannel.removeChannel(event.getPlayer()));

    }

}
